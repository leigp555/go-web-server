[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN] 2022/12/21 - 16:29:02 | 200 |    5.0015172s |             ::1 | GET      "/"
[GIN] 2022/12/21 - 16:29:21 | 200 |    5.0054769s |             ::1 | GET      "/"
[GIN] 2022/12/21 - 16:33:45 | 200 |    5.0079805s |             ::1 | GET      "/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN] 2022/12/21 - 18:27:24 | 200 |    5.0133992s |       127.0.0.1 | GET      "/"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2022/12/21 - 18:27:29 | 200 |       386.7µs |       127.0.0.1 | GET      "/token"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2022/12/21 - 18:27:49 | 200 |       251.5µs |       127.0.0.1 | GET      "/token"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2022/12/21 - 18:28:10 | 200 |       723.7µs |             ::1 | GET      "/token"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2022/12/21 - 18:30:14 | 200 |       118.1µs |             ::1 | GET      "/token"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2022/12/21 - 18:30:18 | 200 |            0s |             ::1 | GET      "/token"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2022/12/21 - 18:30:40 | 200 |       725.9µs |             ::1 | GET      "/token"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2022/12/21 - 18:32:29 | 200 |     44.7639ms |             ::1 | GET      "/token"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN] 2022/12/21 - 18:34:21 | 200 |     38.0341ms |             ::1 | GET      "/token"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN] 2022/12/21 - 18:39:41 | 200 |     35.2062ms |             ::1 | GET      "/token"
[GIN] 2022/12/21 - 18:39:42 | 200 |            0s |             ::1 | GET      "/token"
[GIN] 2022/12/21 - 18:39:43 | 200 |            0s |             ::1 | GET      "/token"
[GIN] 2022/12/21 - 18:39:43 | 200 |            0s |             ::1 | GET      "/token"
[GIN] 2022/12/21 - 18:39:44 | 200 |            0s |             ::1 | GET      "/token"
[GIN] 2022/12/21 - 18:39:45 | 200 |            0s |             ::1 | GET      "/token"
[GIN] 2022/12/21 - 18:46:12 | 200 |            0s |             ::1 | GET      "/token"
[GIN] 2022/12/21 - 18:46:21 | 404 |            0s |             ::1 | GET      "/parse?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImxncCIsImlzcyI6InRlc3QiLCJzdWIiOiJzb21lYm9keSIsImV4cCI6MTY3MTYxOTE4OSwibmJmIjoxNjcxNjE5NTcyLCJpYXQiOjE2NzE2MTk1NzJ9.YnAgnjcDNJs9HE9YQKS8ItobP3mGjEX2GUPfRT_amuc"
[GIN] 2022/12/21 - 18:46:25 | 404 |            0s |             ::1 | POST     "/parse?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImxncCIsImlzcyI6InRlc3QiLCJzdWIiOiJzb21lYm9keSIsImV4cCI6MTY3MTYxOTE4OSwibmJmIjoxNjcxNjE5NTcyLCJpYXQiOjE2NzE2MTk1NzJ9.YnAgnjcDNJs9HE9YQKS8ItobP3mGjEX2GUPfRT_amuc"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN] 2022/12/21 - 18:46:59 | 200 |     35.9273ms |             ::1 | GET      "/token"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2022/12/21 - 18:47:12 | 200 |       376.8µs |             ::1 | POST     "/parse?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImxncCIsImlzcyI6InRlc3QiLCJzdWIiOiJzb21lYm9keSIsImV4cCI6MTY3MTYxOTYyNCwibmJmIjoxNjcxNjE5NjE5LCJpYXQiOjE2NzE2MTk2MTl9.n6ggrpA6A2mb3tTvQv4NbWxnufA0AVCYaDKEioRiYYY"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2022/12/21 - 18:47:19 | 200 |       250.5µs |             ::1 | POST     "/parse?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImxncCIsImlzcyI6InRlc3QiLCJzdWIiOiJzb21lYm9keSIsImV4cCI6MTY3MTYxOTYyNCwibmJmIjoxNjcxNjE5NjE5LCJpYXQiOjE2NzE2MTk2MTl9.n6ggrpA6A2mb3tTvQv4NbWxnufA0AVCYaDKEioRiYYY"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN] 2022/12/21 - 18:48:49 | 200 |     39.2997ms |             ::1 | GET      "/token"
[GIN] 2022/12/21 - 18:49:04 | 200 |            0s |             ::1 | POST     "/parse?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImxncCIsImlzcyI6InRlc3QiLCJzdWIiOiJzb21lYm9keSIsImV4cCI6MTY3MTYyMDcyMiwibmJmIjoxNjcxNjE5NzI5LCJpYXQiOjE2NzE2MTk3Mjl9.VpyOfP75GZIUrqxC214YA4SLFUuLlHli7ToMQJvMGFk"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN] 2022/12/21 - 18:49:47 | 200 |       36.16ms |             ::1 | GET      "/token"
[GIN] 2022/12/21 - 18:50:05 | 200 |       506.5µs |             ::1 | POST     "/parse?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IuaIkeaYr-S9oOeahOecvCIsImlzcyI6InRlc3QiLCJzdWIiOiJzb21lYm9keSIsImV4cCI6MTY3MTYyMDc4NCwibmJmIjoxNjcxNjE5Nzg3LCJpYXQiOjE2NzE2MTk3ODd9.kS88u3avmeUNo7dT2LqUcxNTLpXRIKz-TFbUs0duX0s"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (3 handlers)
[GIN] 2022/12/21 - 19:21:48 | 200 |       2.447ms |             ::1 | GET      "/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (3 handlers)
[GIN] 2022/12/21 - 19:22:28 | 200 |      2.6508ms |             ::1 | GET      "/captcha"
[GIN] 2022/12/21 - 19:22:36 | 200 |      2.6344ms |             ::1 | GET      "/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (3 handlers)
[GIN] 2022/12/21 - 19:23:39 | 200 |      4.0626ms |             ::1 | GET      "/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (3 handlers)
[GIN] 2022/12/21 - 19:38:06 | 200 |      3.8259ms |             ::1 | GET      "/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (3 handlers)
[GIN] 2022/12/21 - 19:52:09 | 200 |       3.738ms |             ::1 | GET      "/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (3 handlers)
[GIN-debug] GET    /parseCaptcha             --> go/note/server.StartServer.func5 (3 handlers)
[GIN] 2022/12/21 - 20:01:47 | 200 |      1.9966ms |             ::1 | GET      "/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (3 handlers)
[GIN-debug] GET    /parseCaptcha             --> go/note/server.StartServer.func5 (3 handlers)
[GIN] 2022/12/21 - 20:03:50 | 200 |      2.3039ms |             ::1 | GET      "/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (3 handlers)
[GIN-debug] GET    /parseCaptcha             --> go/note/server.StartServer.func5 (3 handlers)
[GIN] 2022/12/21 - 20:05:30 | 200 |      3.5358ms |             ::1 | GET      "/captcha"
[GIN] 2022/12/21 - 20:06:05 | 404 |            0s |             ::1 | POST     "/parseCaptcha?id=BOJo2322bKH0mv6HXcMa&code=2037"
[GIN] 2022/12/21 - 20:06:27 | 404 |            0s |             ::1 | POST     "/parseCaptcha?id=BOJo2322bKH0mv6HXcMa&code=2037"
[GIN] 2022/12/21 - 20:07:01 | 404 |            0s |             ::1 | POST     "/parseCaptcha?id=BOJo2322bKH0mv6HXcMa&code=2037"
[GIN] 2022/12/21 - 20:07:03 | 404 |            0s |             ::1 | POST     "/parseCaptcha?id=BOJo2322bKH0mv6HXcMa&code=2037"
[GIN] 2022/12/21 - 20:07:07 | 404 |            0s |             ::1 | POST     "/parseCaptcha?id=BOJo2322bKH0mv6HXcMa&code=2037"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (3 handlers)
[GIN-debug] GET    /parseCaptcha             --> go/note/server.StartServer.func5 (3 handlers)
[GIN] 2022/12/21 - 20:08:20 | 404 |            0s |             ::1 | POST     "/parseCaptcha?id=BOJo2322bKH0mv6HXcMa&code=2037"
[GIN] 2022/12/21 - 20:09:14 | 404 |            0s |             ::1 | POST     "/parseCaptcha?id=BOJo2322bKH0mv6HXcMa&code=2037"
[GIN] 2022/12/21 - 20:09:40 | 404 |            0s |             ::1 | POST     "/parseCaptcha?id=BOJo2322bKH0mv6HXcMa&code=2037"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (3 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/server.StartServer.func5 (3 handlers)
[GIN] 2022/12/21 - 20:09:51 | 200 |            0s |             ::1 | POST     "/parseCaptcha?id=BOJo2322bKH0mv6HXcMa&code=2037"
[GIN] 2022/12/21 - 20:10:30 | 200 |      3.3257ms |             ::1 | GET      "/captcha"
[GIN] 2022/12/21 - 20:11:05 | 200 |            0s |             ::1 | POST     "/parseCaptcha?id=QtY2qK2uOxOqc6DuYJRY&code=5539"
[GIN] 2022/12/21 - 20:12:49 | 200 |       166.7µs |             ::1 | POST     "/parseCaptcha?id=QtY2qK2uOxOqc6DuYJRY&code=5539"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (3 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (3 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (3 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (3 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/server.StartServer.func5 (3 handlers)
[GIN-debug] GET    /email                    --> go/note/server.StartServer.func6 (3 handlers)
[GIN] 2022/12/21 - 20:26:34 | 200 |    1.4209574s |             ::1 | GET      "/email"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (4 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (4 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (4 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (4 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/server.StartServer.func5 (4 handlers)
[GIN-debug] GET    /email                    --> go/note/server.StartServer.func6 (4 handlers)
[GIN] 2022/12/21 - 21:16:14 | 200 |    5.0109073s |             ::1 | GET      "/"
[GIN] 2022/12/21 - 21:24:44 | 200 |     5.015703s |             ::1 | GET      "/"
[GIN] 2022/12/21 - 22:27:59 | 200 |    5.0036082s |             ::1 | GET      "/"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/router.UserRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/router.UserRouter.func2 (4 handlers)
[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (4 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (4 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (4 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (4 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/server.StartServer.func5 (4 handlers)
[GIN-debug] GET    /email                    --> go/note/server.StartServer.func6 (4 handlers)
[GIN] 2022/12/21 - 22:38:44 | 200 |       485.8µs |             ::1 | GET      "/v1/login"
[GIN] 2022/12/21 - 22:41:13 | 200 |            0s |             ::1 | GET      "/v1/register"
[GIN] 2022/12/22 - 09:38:37 | 200 |       402.5µs |             ::1 | GET      "/v1/register"
[GIN] 2022/12/22 - 09:38:42 | 200 |            0s |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 09:38:48 | 404 |            0s |             ::1 | GET      "/v1/token"
[GIN] 2022/12/22 - 09:38:55 | 200 |       965.9µs |             ::1 | GET      "/token"
[GIN] 2022/12/22 - 09:39:04 | 200 |      5.4362ms |             ::1 | GET      "/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/router.UserRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/router.UserRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/router.UserRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/router.UserRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /                         --> go/note/server.StartServer.func1 (4 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func2 (4 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func3 (4 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func4 (4 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/server.StartServer.func5 (4 handlers)
[GIN-debug] GET    /email                    --> go/note/server.StartServer.func6 (4 handlers)
[GIN] 2022/12/22 - 10:57:46 | 200 |            0s |             ::1 | GET      "/v1/article"
[GIN] 2022/12/22 - 10:57:50 | 200 |            0s |             ::1 | GET      "/v1/xxx"
[GIN] 2022/12/22 - 11:09:18 | 200 |            0s |             ::1 | GET      "/v1/login"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/router.UserRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/router.UserRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func1 (4 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func2 (4 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func3 (4 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/server.StartServer.func4 (4 handlers)
[GIN-debug] GET    /email                    --> go/note/server.StartServer.func5 (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func1 (4 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func2 (4 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func3 (4 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/server.StartServer.func4 (4 handlers)
[GIN-debug] GET    /email                    --> go/note/server.StartServer.func5 (4 handlers)
[GIN] 2022/12/22 - 13:03:02 | 200 |            0s |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 13:03:07 | 200 |            0s |             ::1 | GET      "/v1/register"
[GIN] 2022/12/22 - 13:03:24 | 200 |            0s |             ::1 | GET      "/v1/register"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func1 (4 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func2 (4 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func3 (4 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/server.StartServer.func4 (4 handlers)
[GIN-debug] GET    /email                    --> go/note/server.StartServer.func5 (4 handlers)
[GIN] 2022/12/22 - 13:03:35 | 200 |            0s |             ::1 | GET      "/v1/register"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /token                    --> go/note/server.StartServer.func1 (4 handlers)
[GIN-debug] POST   /parse                    --> go/note/server.StartServer.func2 (4 handlers)
[GIN-debug] GET    /captcha                  --> go/note/server.StartServer.func3 (4 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/server.StartServer.func4 (4 handlers)
[GIN-debug] GET    /email                    --> go/note/server.StartServer.func5 (4 handlers)
[GIN] 2022/12/22 - 13:18:30 | 200 |       724.7µs |             ::1 | GET      "/v1/register"
[GIN] 2022/12/22 - 13:18:34 | 200 |       293.3µs |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 13:20:28 | 200 |        87.3µs |             ::1 | GET      "/v1/register"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /token                    --> go/note/router.InitRouter.func1 (4 handlers)
[GIN-debug] POST   /parse                    --> go/note/router.InitRouter.func2 (4 handlers)
[GIN-debug] GET    /captcha                  --> go/note/router.InitRouter.func3 (4 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/router.InitRouter.func4 (4 handlers)
[GIN-debug] GET    /email                    --> go/note/router.InitRouter.func5 (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /token                    --> go/note/router.InitRouter.func1 (4 handlers)
[GIN-debug] POST   /parse                    --> go/note/router.InitRouter.func2 (4 handlers)
[GIN-debug] GET    /captcha                  --> go/note/router.InitRouter.func3 (4 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/router.InitRouter.func4 (4 handlers)
[GIN-debug] GET    /email                    --> go/note/router.InitRouter.func5 (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /token                    --> go/note/router.InitRouter.func1 (4 handlers)
[GIN-debug] POST   /parse                    --> go/note/router.InitRouter.func2 (4 handlers)
[GIN-debug] GET    /captcha                  --> go/note/router.InitRouter.func3 (4 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/router.InitRouter.func4 (4 handlers)
[GIN-debug] GET    /email                    --> go/note/router.InitRouter.func5 (4 handlers)
[GIN] 2022/12/22 - 14:33:21 | 200 |            0s |             ::1 | GET      "/v1/register"
[GIN] 2022/12/22 - 14:33:22 | 200 |            0s |             ::1 | GET      "/v1/register"
[GIN] 2022/12/22 - 14:33:26 | 200 |            0s |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 14:43:21 | 200 |       127.8µs |             ::1 | GET      "/v1/login"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /token                    --> go/note/router.InitRouter.func1 (4 handlers)
[GIN-debug] POST   /parse                    --> go/note/router.InitRouter.func2 (4 handlers)
[GIN-debug] GET    /captcha                  --> go/note/router.InitRouter.func3 (4 handlers)
[GIN-debug] POST   /parseCaptcha             --> go/note/router.InitRouter.func4 (4 handlers)
[GIN-debug] GET    /email                    --> go/note/router.InitRouter.func5 (4 handlers)
[GIN] 2022/12/22 - 14:43:34 | 200 |            0s |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 14:43:36 | 200 |            0s |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 14:43:40 | 200 |            0s |             ::1 | GET      "/v1/register"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN] 2022/12/22 - 14:54:00 | 500 |      5.5983ms |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 14:54:03 | 500 |     15.0645ms |             ::1 | GET      "/v1/login"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN] 2022/12/22 - 14:58:14 | 200 |     11.1332ms |             ::1 | GET      "/v1/login"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN] 2022/12/22 - 14:59:11 | 200 |       5.497ms |             ::1 | GET      "/v1/login"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN] 2022/12/22 - 15:17:44 | 200 |      6.4841ms |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 15:19:08 | 200 |      5.9139ms |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 15:19:11 | 200 |       5.005ms |             ::1 | GET      "/v1/login"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN] 2022/12/22 - 15:20:18 | 200 |      6.7264ms |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 15:20:27 | 200 |      5.4535ms |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 15:20:28 | 200 |      6.1638ms |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 15:22:02 | 200 |     13.5014ms |             ::1 | GET      "/v1/register"
[GIN] 2022/12/22 - 15:32:52 | 200 |      5.2853ms |             ::1 | GET      "/v1/login"
[GIN] 2022/12/22 - 16:55:23 | 404 |            0s |             ::1 | GET      "/v1/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/captcha               --> go/note/controller.CaptchaHandle (4 handlers)
[GIN] 2022/12/22 - 16:55:38 | 200 |       3.315ms |             ::1 | GET      "/v1/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/captcha               --> go/note/controller.CaptchaHandle (4 handlers)
[GIN-debug] GET    /v1/email/captcha         --> go/note/controller.EmailCaptchaHandle (4 handlers)
[GIN] 2022/12/22 - 17:34:12 | 200 |      2.8255ms |             ::1 | GET      "/v1/captcha"
[GIN] 2022/12/22 - 17:34:16 | 200 |      2.3915ms |             ::1 | GET      "/v1/captcha"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2022/12/22 - 17:34:30 | 200 |     13.4658ms |             ::1 | GET      "/v1/email/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/captcha               --> go/note/controller.CaptchaHandle (4 handlers)
[GIN-debug] GET    /v1/email/captcha         --> go/note/controller.EmailCaptchaHandle (4 handlers)
[GIN] 2022/12/22 - 17:36:50 | 400 |       570.6µs |             ::1 | GET      "/v1/email/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/captcha               --> go/note/controller.CaptchaHandle (4 handlers)
[GIN-debug] GET    /v1/email/captcha         --> go/note/controller.EmailCaptchaHandle (4 handlers)
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 200
[GIN] 2022/12/22 - 17:37:07 | 200 |     13.3729ms |             ::1 | GET      "/v1/email/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/captcha               --> go/note/controller.CaptchaHandle (4 handlers)
[GIN-debug] GET    /v1/email/captcha         --> go/note/controller.EmailCaptchaHandle (4 handlers)
[GIN] 2022/12/22 - 17:38:18 | 400 |       947.4µs |             ::1 | GET      "/v1/email/captcha"
[GIN] 2022/12/22 - 17:39:34 | 400 |            0s |             ::1 | GET      "/v1/email/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/captcha               --> go/note/controller.CaptchaHandle (4 handlers)
[GIN-debug] GET    /v1/email/captcha         --> go/note/controller.EmailCaptchaHandle (4 handlers)
[GIN] 2022/12/22 - 17:41:11 | 400 |            0s |             ::1 | GET      "/v1/email/captcha"
[GIN] 2022/12/22 - 17:42:35 | 500 |      4.0013ms |             ::1 | GET      "/v1/email/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/captcha               --> go/note/controller.CaptchaHandle (4 handlers)
[GIN-debug] GET    /v1/email/captcha         --> go/note/controller.EmailCaptchaHandle (4 handlers)
[GIN] 2022/12/22 - 17:43:28 | 200 |    1.4952247s |             ::1 | GET      "/v1/email/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/captcha               --> go/note/controller.CaptchaHandle (4 handlers)
[GIN-debug] GET    /v1/email/captcha         --> go/note/controller.EmailCaptchaHandle (4 handlers)
[GIN] 2022/12/22 - 17:44:15 | 200 |    1.3650742s |             ::1 | GET      "/v1/email/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/captcha               --> go/note/controller.CaptchaHandle (4 handlers)
[GIN-debug] GET    /v1/email/captcha         --> go/note/controller.EmailCaptchaHandle (4 handlers)
[GIN] 2022/12/22 - 17:48:01 | 200 |    1.3921127s |             ::1 | GET      "/v1/email/captcha"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /v1/login                 --> go/note/controller.LoginHandle (4 handlers)
[GIN-debug] GET    /v1/register              --> go/note/controller.RegisterHandle (4 handlers)
[GIN-debug] GET    /v1/article               --> go/note/router.ArticleRouter.func1 (4 handlers)
[GIN-debug] GET    /v1/xxx                   --> go/note/router.ArticleRouter.func2 (4 handlers)
[GIN-debug] GET    /v1/captcha               --> go/note/controller.CaptchaHandle (4 handlers)
[GIN-debug] GET    /v1/email/captcha         --> go/note/controller.EmailCaptchaHandle (4 handlers)
[GIN] 2022/12/22 - 17:50:11 | 200 |    1.4913276s |             ::1 | GET      "/v1/email/captcha"
